/* eslint max-len: ["off"]*/
/*
 * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not
 * use this file except in compliance with the License. A copy of the License
 * is located at
 *
 *    http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
'use strict';

const Assembler = require('../src/Assembler').Assembler;
const CustomAssemblers = require('../src/CustomAssemblers');
const CborTypes = require('../src/CborTypes');
const Constants = require('../src/Constants');
const DaxClientError = require('../src/DaxClientError');


exports.batchGetItem_N697851100_1_Assembler = class batchGetItem_N697851100_1_Assembler extends CustomAssemblers.Custom_batchGetItem_N697851100_1_Assembler {
  // Use a custom assembler
  * assemblef() {
    yield* this._handleError();
    return (yield* this._decode_batchGetItem_N697851100_1_Result());
  }
};

exports.batchWriteItem_116217951_1_Assembler = class batchWriteItem_116217951_1_Assembler extends CustomAssemblers.Custom_batchWriteItem_116217951_1_Assembler {
  // Use a custom assembler
  * assemblef() {
    yield* this._handleError();
    return (yield* this._decode_batchWriteItem_116217951_1_Result());
  }
};

exports.defineAttributeList_670678385_1_Assembler = class defineAttributeList_670678385_1_Assembler extends CustomAssemblers.Custom_defineAttributeList_670678385_1_Assembler {
  // Use a custom assembler
  * assemblef() {
    yield* this._handleError();
    return (yield* this._decode_defineAttributeList_670678385_1_Result());
  }
};

exports.defineAttributeListId_N1230579644_1_Assembler = class defineAttributeListId_N1230579644_1_Assembler extends CustomAssemblers.Custom_defineAttributeListId_N1230579644_1_Assembler {
  // Use a custom assembler
  * assemblef() {
    yield* this._handleError();
    return (yield* this._decode_defineAttributeListId_N1230579644_1_Result());
  }
};

exports.defineKeySchema_N742646399_1_Assembler = class defineKeySchema_N742646399_1_Assembler extends CustomAssemblers.Custom_defineKeySchema_N742646399_1_Assembler {
  // Use a custom assembler
  * assemblef() {
    yield* this._handleError();
    return (yield* this._decode_defineKeySchema_N742646399_1_Result());
  }
};

exports.deleteItem_1013539361_1_Assembler = class deleteItem_1013539361_1_Assembler extends Assembler {
  // Use the standard assembler, customized for deleteItem_1013539361_1
  * assemblef() {
    yield* this._handleError();
    let result = {};
    let mapHeader = yield;
    if(mapHeader[0] === CborTypes.RET_NULL) {
      return result;
    }

    for(let i = 0; i !== mapHeader[1]; ++i) {
      let paramId = yield; // could be Stream Break
      if(paramId[0] === CborTypes.RET_STREAM_BREAK) {
        break;
      }
      yield* this._decode_deleteItem_1013539361_1_Result_Param(Number(paramId[1]), result);
    }

    return result;
  }

  // Per-operation standard decoder
  * _decode_deleteItem_1013539361_1_Result_Param(param, result) {
    switch(param) {
      case Constants.DaxResponseParam.Attributes:
        result.Attributes = yield* this._decodeAttributes();
        break;
      case Constants.DaxResponseParam.ConsumedCapacity:
        result.ConsumedCapacity = yield* this._decodeConsumedCapacity();
        break;
      case Constants.DaxResponseParam.ItemCollectionMetrics:
        result.ItemCollectionMetrics = yield* this._decodeItemCollectionMetrics();
        break;
      default:
        throw new DaxClientError(`unknown value type: ${param}`, DaxErrorCode.MalformedResult);
    }
  }
};

exports.endpoints_455855874_1_Assembler = class endpoints_455855874_1_Assembler extends CustomAssemblers.Custom_endpoints_455855874_1_Assembler {
  // Use a custom assembler
  * assemblef() {
    yield* this._handleError();
    return (yield* this._decode_endpoints_455855874_1_Result());
  }
};

exports.getItem_263244906_1_Assembler = class getItem_263244906_1_Assembler extends Assembler {
  // Use the standard assembler, customized for getItem_263244906_1
  * assemblef() {
    yield* this._handleError();
    let result = {};
    let mapHeader = yield;
    if(mapHeader[0] === CborTypes.RET_NULL) {
      return result;
    }

    for(let i = 0; i !== mapHeader[1]; ++i) {
      let paramId = yield; // could be Stream Break
      if(paramId[0] === CborTypes.RET_STREAM_BREAK) {
        break;
      }
      yield* this._decode_getItem_263244906_1_Result_Param(Number(paramId[1]), result);
    }

    return result;
  }

  // Per-operation standard decoder
  * _decode_getItem_263244906_1_Result_Param(param, result) {
    switch(param) {
      case Constants.DaxResponseParam.Item:
        result.Item = yield* this._decodeItem();
        break;
      case Constants.DaxResponseParam.ConsumedCapacity:
        result.ConsumedCapacity = yield* this._decodeConsumedCapacity();
        break;
      default:
        throw new DaxClientError(`unknown value type: ${param}`, DaxErrorCode.MalformedResult);
    }
  }
};

exports.putItem_N2106490455_1_Assembler = class putItem_N2106490455_1_Assembler extends Assembler {
  // Use the standard assembler, customized for putItem_N2106490455_1
  * assemblef() {
    yield* this._handleError();
    let result = {};
    let mapHeader = yield;
    if(mapHeader[0] === CborTypes.RET_NULL) {
      return result;
    }

    for(let i = 0; i !== mapHeader[1]; ++i) {
      let paramId = yield; // could be Stream Break
      if(paramId[0] === CborTypes.RET_STREAM_BREAK) {
        break;
      }
      yield* this._decode_putItem_N2106490455_1_Result_Param(Number(paramId[1]), result);
    }

    return result;
  }

  // Per-operation standard decoder
  * _decode_putItem_N2106490455_1_Result_Param(param, result) {
    switch(param) {
      case Constants.DaxResponseParam.Attributes:
        result.Attributes = yield* this._decodeAttributes();
        break;
      case Constants.DaxResponseParam.ConsumedCapacity:
        result.ConsumedCapacity = yield* this._decodeConsumedCapacity();
        break;
      case Constants.DaxResponseParam.ItemCollectionMetrics:
        result.ItemCollectionMetrics = yield* this._decodeItemCollectionMetrics();
        break;
      default:
        throw new DaxClientError(`unknown value type: ${param}`, DaxErrorCode.MalformedResult);
    }
  }
};

exports.query_N931250863_1_Assembler = class query_N931250863_1_Assembler extends Assembler {
  // Use the standard assembler, customized for query_N931250863_1
  * assemblef() {
    yield* this._handleError();
    let result = {};
    let mapHeader = yield;
    if(mapHeader[0] === CborTypes.RET_NULL) {
      return result;
    }

    for(let i = 0; i !== mapHeader[1]; ++i) {
      let paramId = yield; // could be Stream Break
      if(paramId[0] === CborTypes.RET_STREAM_BREAK) {
        break;
      }
      yield* this._decode_query_N931250863_1_Result_Param(Number(paramId[1]), result);
    }

    return result;
  }

  // Per-operation standard decoder
  * _decode_query_N931250863_1_Result_Param(param, result) {
    switch(param) {
      case Constants.DaxResponseParam.Items:
        result.Items = yield* this._decodeItems();
        break;
      case Constants.DaxResponseParam.Count:
        result.Count = yield* this._decodeCount();
        break;
      case Constants.DaxResponseParam.ScannedCount:
        result.ScannedCount = yield* this._decodeScannedCount();
        break;
      case Constants.DaxResponseParam.LastEvaluatedKey:
        result.LastEvaluatedKey = yield* this._decodeLastEvaluatedKey();
        break;
      case Constants.DaxResponseParam.ConsumedCapacity:
        result.ConsumedCapacity = yield* this._decodeConsumedCapacity();
        break;
      default:
        throw new DaxClientError(`unknown value type: ${param}`, DaxErrorCode.MalformedResult);
    }
  }
};

exports.scan_N1875390620_1_Assembler = class scan_N1875390620_1_Assembler extends Assembler {
  // Use the standard assembler, customized for scan_N1875390620_1
  * assemblef() {
    yield* this._handleError();
    let result = {};
    let mapHeader = yield;
    if(mapHeader[0] === CborTypes.RET_NULL) {
      return result;
    }

    for(let i = 0; i !== mapHeader[1]; ++i) {
      let paramId = yield; // could be Stream Break
      if(paramId[0] === CborTypes.RET_STREAM_BREAK) {
        break;
      }
      yield* this._decode_scan_N1875390620_1_Result_Param(Number(paramId[1]), result);
    }

    return result;
  }

  // Per-operation standard decoder
  * _decode_scan_N1875390620_1_Result_Param(param, result) {
    switch(param) {
      case Constants.DaxResponseParam.Items:
        result.Items = yield* this._decodeItems();
        break;
      case Constants.DaxResponseParam.Count:
        result.Count = yield* this._decodeCount();
        break;
      case Constants.DaxResponseParam.ScannedCount:
        result.ScannedCount = yield* this._decodeScannedCount();
        break;
      case Constants.DaxResponseParam.LastEvaluatedKey:
        result.LastEvaluatedKey = yield* this._decodeLastEvaluatedKey();
        break;
      case Constants.DaxResponseParam.ConsumedCapacity:
        result.ConsumedCapacity = yield* this._decodeConsumedCapacity();
        break;
      default:
        throw new DaxClientError(`unknown value type: ${param}`, DaxErrorCode.MalformedResult);
    }
  }
};

exports.updateItem_1425579023_1_Assembler = class updateItem_1425579023_1_Assembler extends Assembler {
  // Use the standard assembler, customized for updateItem_1425579023_1
  * assemblef() {
    yield* this._handleError();
    let result = {};
    let mapHeader = yield;
    if(mapHeader[0] === CborTypes.RET_NULL) {
      return result;
    }

    for(let i = 0; i !== mapHeader[1]; ++i) {
      let paramId = yield; // could be Stream Break
      if(paramId[0] === CborTypes.RET_STREAM_BREAK) {
        break;
      }
      yield* this._decode_updateItem_1425579023_1_Result_Param(Number(paramId[1]), result);
    }

    return result;
  }

  // Per-operation standard decoder
  * _decode_updateItem_1425579023_1_Result_Param(param, result) {
    switch(param) {
      case Constants.DaxResponseParam.Attributes:
        result.Attributes = yield* this._decodeAttributes();
        break;
      case Constants.DaxResponseParam.ConsumedCapacity:
        result.ConsumedCapacity = yield* this._decodeConsumedCapacity();
        break;
      case Constants.DaxResponseParam.ItemCollectionMetrics:
        result.ItemCollectionMetrics = yield* this._decodeItemCollectionMetrics();
        break;
      default:
        throw new DaxClientError(`unknown value type: ${param}`, DaxErrorCode.MalformedResult);
    }
  }
};


