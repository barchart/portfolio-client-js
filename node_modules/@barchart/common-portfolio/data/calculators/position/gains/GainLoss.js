const log4js = require('log4js');

const Decimal = require('@barchart/common-js/lang/Decimal');

const PositionCalculatorStrategy = require('./../PositionCalculatorStrategy');

module.exports = (() => {
	'use strict';

	const logger = log4js.getLogger('portfolio-common/data/calculators/position/gains/GainLossCalculator');

	/**
	 * The interface for a stateful profit and loss calculator.
	 *
	 * @public
	 * @interface
	 * @extends {PositionCalculatorStrategy}
	 */
	class GainLoss extends PositionCalculatorStrategy {
		constructor() {
			super();
		}

		static format(open, basis, gain) {
			return {
				open: open,
				basis: basis,
				gain: gain
			};
		}

		toString() {
			return '[GainLoss]';
		}
	}

	/**
	 * Summaries a position.
	 *
	 * @typedef GainSnapshot
	 * @type {Object}
	 * @property {Decimal} open - The current (signed) size of the position.
	 * @property {Decimal} gain - The realized gain (signed) on the position.
	 * @property {Decimal} basis - The current basis (signed) on the position.
	 */

	return GainLoss;
})();