const log4js = require('log4js');

const Decimal = require('@barchart/common-js/lang/Decimal');

const PositionCalculatorStrategy = require('./../PositionCalculatorStrategy');

module.exports = (() => {
	'use strict';

	const logger = log4js.getLogger('portfolio-common/data/calculators/position/direction/DirectionTabulator');

	/**
	 * Tabulates long and short amounts.
	 *
	 * @public
	 * @extends {PositionCalculatorStrategy}
	 */
	class DirectionTabulator extends PositionCalculatorStrategy {
		constructor() {
			super();

			this._buys = Decimal.ZERO;
			this._sells = Decimal.ZERO;
		}

		_calculate(transaction, currency) {
			if (transaction.type.purchase) {
				this._buys = this._buys.add(transaction.amount);
			} else if (transaction.type.sale) {
				this._sells = this._sells.add(transaction.amount);
			}

			return format(this._buys, this._sells);
		}

		toString() {
			return '[DirectionTabulator]';
		}
	}

	function format(buys, sells) {
		return {
			buys: buys,
			sells: sells
		};
	}

	/**
	 * Summaries purchases and sales.
	 *
	 * @typedef DirectionSnapshot
	 * @type {Object}
	 * @property {Decimal} buys - The total amount of all purchases.
	 * @property {Decimal} sells - The total amount of all sales.
	 */

	return DirectionTabulator;
})();