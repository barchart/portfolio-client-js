const log4js = require('log4js');

const assert = require('@barchart/common-js/lang/assert'),
	Currency = require('@barchart/common-js/lang/Currency'),
	Decimal = require('@barchart/common-js/lang/Decimal');

module.exports = (() => {
	'use strict';

	const logger = log4js.getLogger('portfolio-common/data/calculators/position/gains/GainLossCalculator');

	/**
	 * The interface for a stateful computations based on an ordered series
	 * of transactions.
	 *
	 * @public
	 * @interface
	 */
	class PositionCalculatorStrategy {
		constructor() {

		}

		/**
		 * Given the first (or next) transaction in a sequence, perform and return
		 * a calculation.
		 *
		 * @public
		 * @param {Transaction} transaction
		 * @param {Currency} currency
		 * @returns {Object}
		 */
		calculate(transaction, currency) {
			assert.argumentIsRequired(transaction, 'Transaction', Object);
			assert.argumentIsRequired(currency, 'currency', Currency, 'Currency');

			return this._calculate(transaction, currency);
		}

		/**
		 * @protected
		 * @ignore
		 * @returns {Object}
		 */
		_calculate(transaction, currency) {
			return { };
		}

		toString() {
			return '[PositionCalculatorStrategy]';
		}
	}

	return PositionCalculatorStrategy;
})();