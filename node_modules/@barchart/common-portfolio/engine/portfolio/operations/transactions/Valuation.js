const assert = require('@barchart/common-js/lang/assert'),
	Decimal = require('@barchart/common-js/lang/Decimal');

const Create = require('./Create'),
	TransactionType = require('./../../../../data/TransactionType');

module.exports = (() => {
	'use strict';

	/**
	 * Creates a {@link TransactionType.VALUATION} transaction.
	 *
	 * @public
	 * @extends {Create}
	 * @param {Object} data
	 * @param {String} data.user - The user identifier (of the portfolio's owner).
	 * @param {String} data.portfolio - The identifier of the portfolio.
	 * @param {String|Currency} data.position - The identifier of the position (or the currency).
	 * @param {Day} data.date - The day of the transaction.
	 * @param {Timestamp} data.timestamp - The moment of the transaction.
	 * @param {Decimal} data.value - The current value of the position.
	 */
	class Valuation extends Create {
		constructor(data) {
			super(data);

			assert.argumentIsValid(data.value, 'data.value', Decimal.getIsNotNegative, 'cannot be negative');
		}

		get type() {
			return TransactionType.VALUATION;
		}

		_createTransaction(position, transactions, data) {
			return {
				valuation: {
					value: data.value
				}
			};
		}

		toString() {
			return '[Valuation]';
		}
	}

	return Valuation;
})();