const assert = require('@barchart/common-js/lang/assert');

const DynamoProvider = require('@barchart/common-node-js/aws/DynamoProvider');

const DataSession = require('./../DataSession'),
	DataSessionFactory = require('./../DataSessionFactory'),
	PortfolioDataOperationComparator = require('./PortfolioDataOperationComparator'),
	PortfolioDataProvider = require('./PortfolioDataProvider');

const PortfolioTable = require('./../../database/tables/PortfolioTable'),
	PositionTable = require('./../../database/tables/PositionTable'),
	TransactionTable = require('./../../database/tables/TransactionTable');

module.exports = (() => {
	'use strict';

	/**
	 * Creates {@link DataSession} instances for portfolio interactions.
	 *
	 * @public
	 * @extends DataSessionFactory
	 * @param {DynamoProvider}
	 */
	class PortfolioDataSessionFactory extends DataSessionFactory {
		constructor(dynamoProvider) {
			super();

			assert.argumentIsRequired(dynamoProvider, 'dynamoProvider', DynamoProvider, 'DynamoProvider');

			this._portfolioTable = new PortfolioTable(dynamoProvider);
			this._positionTable = new PositionTable(dynamoProvider);
			this._transactionTable = new TransactionTable(dynamoProvider);
		}

		_start() {
			return Promise.all([
				this._portfolioTable.start(true),
				this._positionTable.start(true),
				this._transactionTable.start(true)
			]);
		}

		_getSession() {
			return new DataSession(PortfolioDataOperationComparator.INSTANCE);
		}

		_getDataProvider() {
			return new PortfolioDataProvider(this._portfolioTable, this._positionTable, this._transactionTable);
		}

		toString() {
			return '[PortfolioDataSessionFactory]';
		}
	}

	return PortfolioDataSessionFactory;
})();
