var Currency = require('@barchart/common-js/lang/Currency'),
	Decimal = require('@barchart/common-js/lang/Decimal'),
	TransactionType = require('./../../../../../../data/TransactionType');

var Fifo = require('./../../../../../../data/calculators/position/gains/Fifo');

describe('When the Fifo calculator is constructed', function() {
	'use strict';

	function getBuyTransaction(shares, price, sequence, fee) {
		const f = new Decimal(fee || 0);

		const s = new Decimal(shares);
		const p = new Decimal(price);
		const a = s.multiply(p).add(f).opposite();

		return { type: TransactionType.BUY, quantity: s, amount: a, sequence: sequence, fee: f };
	}

	function getBuyShortTransaction(shares, price, sequence, fee) {
		const transaction = getBuyTransaction(shares, price, sequence, fee);

		transaction.type = TransactionType.BUY_SHORT;

		return transaction;
	}

	function getSellTransaction(shares, price, sequence, fee) {
		const f = new Decimal(fee || 0);

		const s = new Decimal(shares).opposite();
		const p = new Decimal(price);
		const a = s.multiply(p).add(f).opposite();

		return { type: TransactionType.SELL, quantity: s, amount: a, sequence: sequence, fee: f };
	}

	function getSellShortTransaction(shares, price, sequence, fee) {
		const transaction = getSellTransaction(shares, price, sequence, fee);

		transaction.type = TransactionType.SELL_SHORT;

		return transaction;
	}

	function calculateSnapshot(scenario, depth) {
		const currency = new Currency('XYZ', 'Test Currency', 2);
		const strategy = new Fifo();
		const sliced = scenario.slice(0, depth);

		return sliced.reduce((snapshot, t) => strategy.calculate(t, currency), { });
	}
	//
	// describe('Using scenario one', function() {
	// 	var scenario;
	//
	// 	beforeEach(function() {
	// 		scenario = [
	// 			getBuyTransaction(100, 7.5, 1),
	// 			getSellTransaction(50, 12.5, 2)
	// 		];
	// 	});
	//
	// 	describe('after 2 transactions', function() {
	// 		var snapshot;
	//
	// 		beforeEach(function() {
	// 			snapshot = calculateSnapshot(scenario, 2);
	// 		});
	//
	// 		it('the position should be 50', function() {
	// 			expect(snapshot.open.getIsEqual(50)).toBe(true);
	// 		});
	//
	// 		it('the gain should be 250', function() {
	// 			expect(snapshot.gain.getIsEqual(250)).toBe(true);
	// 		});
	//
	// 		it('the basis should be -375', function() {
	// 			expect(snapshot.basis.getIsEqual(-375)).toBe(true);
	// 		});
	// 	});
	// });
	//
	// describe('Using scenario two', function() {
	// 	var scenario;
	//
	// 	beforeEach(function() {
	// 		scenario = [
	// 			getBuyTransaction(100, 7.5, 1),
	// 			getSellTransaction(100, 12.5, 2)
	// 		];
	// 	});
	//
	// 	describe('after 2 transactions', function() {
	// 		var snapshot;
	//
	// 		beforeEach(function() {
	// 			snapshot = calculateSnapshot(scenario, 2);
	// 		});
	//
	// 		it('the position should be 0', function() {
	// 			expect(snapshot.open.getIsEqual(0)).toBe(true);
	// 		});
	//
	// 		it('the gain should be 500', function() {
	// 			expect(snapshot.gain.getIsEqual(500)).toBe(true);
	// 		});
	//
	// 		it('the basis should be 0', function() {
	// 			expect(snapshot.basis.getIsEqual(0)).toBe(true);
	// 		});
	// 	});
	// });
	//
	// describe('Using scenario three', function() {
	// 	var scenario;
	//
	// 	beforeEach(function() {
	// 		scenario = [
	// 			getBuyTransaction(100, 7.5, 1),
	// 			getSellTransaction(50, 12.5, 2),
	// 			getBuyTransaction(100, 10, 3)
	// 		];
	// 	});
	//
	// 	describe('after 3 transactions', function() {
	// 		var snapshot;
	//
	// 		beforeEach(function() {
	// 			snapshot = calculateSnapshot(scenario, 3);
	// 		});
	//
	// 		it('the position should be 150', function() {
	// 			expect(snapshot.open.getIsEqual(150)).toBe(true);
	// 		});
	//
	// 		it('the gain should be 250', function() {
	// 			expect(snapshot.gain.getIsEqual(250)).toBe(true);
	// 		});
	//
	// 		it('the basis should be -1375', function() {
	// 			expect(snapshot.basis.getIsEqual(-1375)).toBe(true);
	// 		});
	// 	});
	// });
	//
	// describe('Using scenario four', function() {
	// 	var scenario;
	//
	// 	beforeEach(function() {
	// 		scenario = [
	// 			getBuyTransaction(100, 7.5, 1),
	// 			getSellTransaction(50, 12.5, 2),
	// 			getBuyTransaction(100, 10, 3),
	// 			getSellTransaction(75, 12.5, 4)
	// 		];
	// 	});
	//
	// 	describe('after 4 transactions', function() {
	// 		var snapshot;
	//
	// 		beforeEach(function() {
	// 			snapshot = calculateSnapshot(scenario, 4);
	// 		});
	//
	// 		it('the position should be 75', function() {
	// 			expect(snapshot.open.getIsEqual(75)).toBe(true);
	// 		});
	//
	// 		it('the gain should be 562.5', function() {
	// 			expect(snapshot.gain.getIsEqual(562.5)).toBe(true);
	// 		});
	//
	// 		it('the basis should be -750', function() {
	// 			expect(snapshot.basis.getIsEqual(-750)).toBe(true);
	// 		});
	// 	});
	// });
	//
	// describe('Using scenario five', function() {
	// 	var scenario;
	//
	// 	beforeEach(function() {
	// 		scenario = [
	// 			getBuyTransaction(100, 7.5, 1),
	// 			getSellTransaction(50, 12.5, 2),
	// 			getBuyTransaction(100, 10, 3),
	// 			getSellTransaction(150, 12.5, 4)
	// 		];
	// 	});
	//
	// 	describe('after 4 transactions', function() {
	// 		var snapshot;
	//
	// 		beforeEach(function() {
	// 			snapshot = calculateSnapshot(scenario, 4);
	// 		});
	//
	// 		it('the position should be 0', function() {
	// 			expect(snapshot.open.getIsEqual(0)).toBe(true);
	// 		});
	//
	// 		it('the gain should be 750', function() {
	// 			expect(snapshot.gain.getIsEqual(750)).toBe(true);
	// 		});
	//
	// 		it('the basis should be 0', function() {
	// 			expect(snapshot.basis.getIsEqual(0)).toBe(true);
	// 		});
	// 	});
	// });
	//
	// describe('Using scenario six', function() {
	// 	var scenario;
	//
	// 	beforeEach(function() {
	// 		scenario = [
	// 			getSellShortTransaction(100, 7.5, 1),
	// 			getBuyShortTransaction(50, 12.5, 2)
	// 		];
	// 	});
	//
	// 	describe('after 2 transactions', function() {
	// 		var snapshot;
	//
	// 		beforeEach(function() {
	// 			snapshot = calculateSnapshot(scenario, 2);
	// 		});
	//
	// 		it('the position should be -50', function() {
	// 			expect(snapshot.open.getIsEqual(-50)).toBe(true);
	// 		});
	//
	// 		it('the gain should be -250', function() {
	// 			expect(snapshot.gain.getIsEqual(-250)).toBe(true);
	// 		});
	//
	// 		it('the basis should be 375', function() {
	// 			expect(snapshot.basis.getIsEqual(375)).toBe(true);
	// 		});
	// 	});
	// });

	// describe('Using scenario seven', function() {
	// 	var scenario;
	//
	// 	beforeEach(function() {
	// 		scenario = [
	// 			getSellShortTransaction(100, 10, 1),
	// 			getBuyShortTransaction(100, 8, 2)
	// 		];
	// 	});
	//
	// 	describe('after 2 transactions', function() {
	// 		var snapshot;
	//
	// 		beforeEach(function() {
	// 			snapshot = calculateSnapshot(scenario, 2);
	// 		});
	//
	// 		it('the position should be 0', function() {
	// 			expect(snapshot.open.getIsEqual(0)).toBe(true);
	// 		});
	//
	// 		it('the gain should be 200', function() {
	// 			expect(snapshot.gain.getIsEqual(200)).toBe(true);
	// 		});
	//
	// 		it('the basis should be 0', function() {
	// 			expect(snapshot.basis.getIsEqual(0)).toBe(true);
	// 		});
	// 	});
	// });
	/*
	describe('Using scenario 1', function() {
		var scenario;

		beforeEach(function() {
			scenario = [
				getBuyTransaction(100, 10, 1),
				getSellTransaction(50, 9, 2),
				getBuyTransaction(50, 8, 3),
				getSellTransaction(100, 10, 4)
			];
		});
		describe('after 1 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 1);
			});

			it('the position should be 100', function() {
				expect(snapshot.open.getIsEqual(100)).toBe(true);
			});

			it('the gain should be 0', function() {
				expect(snapshot.gain.getIsEqual(0)).toBe(true);
			});

			it('the basis should be -1000', function() {
				expect(snapshot.basis.getIsEqual(-1000)).toBe(true);
			});
		});

		describe('after 2 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 2);
			});

			it('the position should be 50', function() {
				expect(snapshot.open.getIsEqual(50)).toBe(true);
			});

			it('the gain should be -50', function() {
				expect(snapshot.gain.getIsEqual(-50)).toBe(true);
			});

			it('the basis should be -500', function() {
				expect(snapshot.basis.getIsEqual(-500)).toBe(true);
			});
		});

		describe('after 3 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 3);
			});

			it('the position should be 100', function() {
				expect(snapshot.open.getIsEqual(100)).toBe(true);
			});

			it('the gain should be -50', function() {
				expect(snapshot.gain.getIsEqual(-50)).toBe(true);
			});

			it('the basis should be -900', function() {
				expect(snapshot.basis.getIsEqual(-900)).toBe(true);
			});
		});

		describe('after 4 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 4);
			});

			it('the position should be 0', function() {
				expect(snapshot.open.getIsEqual(0)).toBe(true);
			});

			it('the gain should be 50', function() {
				expect(snapshot.gain.getIsEqual(50)).toBe(true);
			});

			it('the basis should be 0', function() {
				expect(snapshot.basis.getIsEqual(0)).toBe(true);
			});
		});
	});
	describe('Using scenario 3', function() {
		var scenario;

		beforeEach(function() {
			scenario = [
				getBuyTransaction(80, 33.75, 1),
				getBuyTransaction(120, 39.77, 2),
				getBuyTransaction(150, 43.97, 3),
				getSellTransaction(150, 45.4, 4),
				getBuyTransaction(100, 43.63, 5),
				getSellTransaction(100, 49.16, 6),
				getSellTransaction(100, 52.14, 7),
				getBuyTransaction(100, 50.92, 8),
				getSellTransaction(100, 55.29, 9),
				getSellTransaction(100, 55.29, 10)
			];
		});
		describe('after 1 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 1);
			});

			it('the position should be 80', function() {
				expect(snapshot.open.getIsEqual(80)).toBe(true);
			});

			it('the gain should be 0', function() {
				expect(snapshot.gain.getIsEqual(0)).toBe(true);
			});

			it('the basis should be -2700', function() {
				expect(snapshot.basis.getIsEqual(-2700)).toBe(true);
			});
		});

		describe('after 2 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 2);
			});

			it('the position should be 200', function() {
				expect(snapshot.open.getIsEqual(200)).toBe(true);
			});

			it('the gain should be 0', function() {
				expect(snapshot.gain.getIsEqual(0)).toBe(true);
			});

			it('the basis should be -7472.4', function() {
				expect(snapshot.basis.getIsEqual(-7472.4)).toBe(true);
			});
		});
		describe('after 3 transactions', function() {
			var snapshot;
			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 3);
			});

			it('the position should be 350', function() {
				expect(snapshot.open.getIsEqual(350)).toBe(true);
			});

			it('the gain should be 0', function() {
				expect(snapshot.gain.getIsEqual(0)).toBe(true);
			});

			it('the basis should be -14067.9', function() {
				expect(snapshot.basis.getIsEqual(-14067.9)).toBe(true);
			});
		});
		describe('after 4 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 4);
			});

			it('the position should be 200', function() {
				expect(snapshot.open.getIsEqual(200)).toBe(true);
			});

			it('the gain should be 1326.1', function() {
				expect(snapshot.gain.getIsEqual(1326.1)).toBe(true);
			});

			it('the basis should be -8584', function() {
				expect(snapshot.basis.getIsEqual(-8584)).toBe(true);
			});
		});
		describe('after 5 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 5);
			});

			it('the position should be 300', function() {
				expect(snapshot.open.getIsEqual(300)).toBe(true);
			});

			it('the gain should be 1326.1', function() {
				expect(snapshot.gain.getIsEqual(1326.1)).toBe(true);
			});

			it('the basis should be -12947', function() {
			expect(snapshot.basis.getIsEqual(-12947)).toBe(true);
			});
		});
		describe('after 6 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 6);
			});

			it('the position should be 200', function() {
				expect(snapshot.open.getIsEqual(200)).toBe(true);
			});

			it('the gain should be 2055.1', function() {
				expect(snapshot.gain.getIsEqual(2055.1)).toBe(true);
			});

			it('the basis should be -8760', function() {
			expect(snapshot.basis.getIsEqual(-8760)).toBe(true);
			});
		});
		describe('after 7 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 7);
			});

			it('the position should be 100', function() {
				expect(snapshot.open.getIsEqual(100)).toBe(true);
			});

			it('the gain should be 2872.1', function() {
				expect(snapshot.gain.getIsEqual(2872.1)).toBe(true);
			});

			it('the basis should be -4363', function() {
			expect(snapshot.basis.getIsEqual(-4363)).toBe(true);
			});
		});
		describe('after 8 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 8);
			});

			it('the position should be 200', function() {
				expect(snapshot.open.getIsEqual(200)).toBe(true);
			});

			it('the gain should be 2872.1', function() {
				expect(snapshot.gain.getIsEqual(2872.1)).toBe(true);
			});

			it('the basis should be -9455', function() {
			expect(snapshot.basis.getIsEqual(-9455)).toBe(true);
		});
		});
		describe('after 9 transactions', function() {
			var snapshot;

			beforeEach(function () {
				snapshot = calculateSnapshot(scenario, 9);
			});

			it('the position should be 100', function () {
				expect(snapshot.open.getIsEqual(100)).toBe(true);
			});

			it('the gain should be 4038.1', function () {
				expect(snapshot.gain.getIsEqual(4038.1)).toBe(true);
			});

			it('the basis should be -5092', function () {
				expect(snapshot.basis.getIsEqual(-5092)).toBe(true);
			});
		})
		describe('after 10 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 10);
			});

			it('the position should be 0', function() {
				expect(snapshot.open.getIsEqual(0)).toBe(true);
			});

			it('the gain should be 4475.1', function() {
				expect(snapshot.gain.getIsEqual(4475.1)).toBe(true);
			});

			it('the basis should be 0', function() {
			expect(snapshot.basis.getIsEqual(0)).toBe(true);
		});
	});
	});
	*/
	describe('Using scenario 7', function() {
		var scenario;

		beforeEach(function() {
			scenario = [
				getBuyTransaction(1200, 13.07, 1, 20.76),
				getBuyTransaction(900, 13.15, 2, 36),
				getSellTransaction(400, 13.3, 3, 36),
				getSellTransaction(500, 13.23, 4, 36),
				getBuyTransaction(1700, 13.45, 5, 36),
				getBuyTransaction(175, 13.45, 6, 20.76),
				getSellTransaction(325, 13.59, 7, 60),
				getBuyTransaction(150, 13.6, 8, 60),
				getSellTransaction(200, 14.11, 9),
				getSellTransaction(300, 13.52, 10, 36),
				getBuyTransaction(400, 13.5, 11, 132),
				getBuyTransaction(100, 13.62, 12, 36),
				getSellTransaction(2900, 13.55, 13, 36),
			];

			console.log
		});
		describe('after 1 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 1);
			});

			it('the position should be 1200', function() {
				expect(snapshot.open.getIsEqual(1200)).toBe(true);
			});

			it('the gain should be 0', function() {
				expect(snapshot.gain.getIsEqual(0)).toBe(true);
			});

			it('the basis should be -15704.76', function() {
				expect(snapshot.basis.getIsEqual(-15704.76)).toBe(true);
			});
		});
		describe('after 2 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 2);
			});

			it('the position should be 2100', function() {
				expect(snapshot.open.getIsEqual(2100)).toBe(true);
			});

			it('the gain should be 0', function() {
				expect(snapshot.gain.getIsEqual(0)).toBe(true);
			});

			it('the basis should be -27575.76', function() {
				expect(snapshot.basis.getIsEqual(-27575.76)).toBe(true);
			});
		});
		describe('after 3 transactions', function() {
			var snapshot;
			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 3);
			});

			it('the position should be 1700', function() {
				expect(snapshot.open.getIsEqual(1700)).toBe(true);
			});

			it('the gain should be 49.08', function() {
				expect(snapshot.gain.getIsEqual(49.08)).toBe(true);
			});

			it('the basis should be -22340.84', function() {
				expect(snapshot.basis.getIsEqual(-22340.84)).toBe(true);
			});
		});
		describe('after 4 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 4);
			});

			it('the position should be 1200', function() {
				expect(snapshot.open.getIsEqual(1200)).toBe(true);
			});

			it('the gain should be 84.43', function() {
				expect(snapshot.gain.getIsEqual(84.43)).toBe(true);
			});

			it('the basis should be -15797.19', function() {
				expect(snapshot.basis.getIsEqual(-15797.19)).toBe(true);
			});
		});
		describe('after 5 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 5);
			});

			it('the position should be 2900', function() {
				expect(snapshot.open.getIsEqual(2900)).toBe(true);
			});

			it('the gain should be 84.43', function() {
				expect(snapshot.gain.getIsEqual(84.43)).toBe(true);
			});

			it('the basis should be -38698.19', function() {
				expect(snapshot.basis.getIsEqual(-38698.19)).toBe(true);
			});
		});
		describe('after 6 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 6);
			});
			it('the position should be 3075', function() {
				expect(snapshot.open.getIsEqual(3075)).toBe(true);
			});

			it('the gain should be 84.43', function() {
				expect(snapshot.gain.getIsEqual(84.43)).toBe(true);
			});

			it('the basis should be -41074.45', function() {
				expect(snapshot.basis.getIsEqual(-41074.45)).toBe(true);
				//console.log('basis is', snapshot.basis)
			});
		});
		describe('after 7 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 7);
			});

			it('the position should be 2750', function() {
				expect(snapshot.open.getIsEqual(2750)).toBe(true);
			});

			it('the gain should be 185.24', function() {
				expect(snapshot.gain.getIsEqual(185.24)).toBe(true);
			});

			it('the basis should be -36818.51', function() {
				expect(snapshot.basis.getIsEqual(-36818.51)).toBe(true);
				//console.log(snapshot.basis)
			});
		});
		describe('after 8 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 8);
			});

			it('the position should be 2900', function() {
				expect(snapshot.open.getIsEqual(2900)).toBe(true);
			});

			it('the gain should be 185.24', function() {
				expect(snapshot.gain.getIsEqual(185.24)).toBe(true);
			});

			it('the basis should be -38918.51', function() {
				expect(snapshot.basis.getIsEqual(-38918.51)).toBe(true);
				//console.log(snapshot.basis)
			});
		});
		describe('after 9 transactions', function() {
			var snapshot;

			beforeEach(function () {
				snapshot = calculateSnapshot(scenario, 9);
			});

			it('the position should be 2700', function () {
				expect(snapshot.open.getIsEqual(2700)).toBe(true);
			});

			it('the gain should be 369.24', function () {
				expect(snapshot.gain.getIsEqual(369.24)).toBe(true);
			});

			it('the basis should be -36280.51', function () {
				expect(snapshot.basis.getIsEqual(-36280.51)).toBe(true);
				//console.log(snapshot.basis)
			});
		})
		describe('after 10 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 10);
			});

			it('the position should be 2400', function() {
				expect(snapshot.open.getIsEqual(2400)).toBe(true);
			});

			it('the gain should be 432.24', function() {
				expect(snapshot.gain.getIsEqual(432.24)).toBe(true);
			});

			it('the basis should be -32323.51', function() {
				expect(snapshot.basis.getIsEqual(-32323.51)).toBe(true);
				//console.log(snapshot.basis)
			});
		});
		describe('after 11 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 11);
			});

			it('the position should be 2800', function() {
				expect(snapshot.open.getIsEqual(2800)).toBe(true);
			});

			it('the gain should be 432.24', function() {
				expect(snapshot.gain.getIsEqual(432.24)).toBe(true);
			});

			it('the basis should be -37855.51', function() {
				expect(snapshot.basis.getIsEqual(-37855.51)).toBe(true);
				//console.log(snapshot.basis)
			});
		});
		describe('after 12 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 12);
			});

			it('the position should be 2900', function() {
				expect(snapshot.open.getIsEqual(2900)).toBe(true);
			});

			it('the gain should be 432.24', function() {
				expect(snapshot.gain.getIsEqual(432.24)).toBe(true);
			});

			it('the basis should be -39253.51', function() {
				expect(snapshot.basis.getIsEqual(-39253.51)).toBe(true);
				//console.log(snapshot.basis)
			});
		});
		describe('after 13 transactions', function() {
			var snapshot;

			beforeEach(function() {
				snapshot = calculateSnapshot(scenario, 13);
			});

			it('the position should be 0', function() {
				expect(snapshot.open.getIsEqual(0)).toBe(true);
			});

			it('the gain should be 437.73', function() {
				expect(snapshot.gain.getIsEqual(437.73)).toBe(true);
				//console.log(snapshot.gain);
			});

			it('the basis should be 0', function() {
				expect(snapshot.basis.getIsEqual(0)).toBe(true);
				// //console.log(snapshot.basis)
			});
		});
	});
});
