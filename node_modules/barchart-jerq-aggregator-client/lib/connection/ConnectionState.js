const assert = require('common/lang/assert');

module.exports = (() => {
	'use strict';

	class ConnectionState {
		constructor(description, canTransmit, canReceive, canConnect, canDisconnect) {
			assert.argumentIsRequired(description, 'description', String);

			this._description = description;

			this._canTransmit = canTransmit;
			this._canReceive = canReceive;

			this._canConnect = canConnect;
			this._canDisconnect = canDisconnect;
		}

		getDescription() {
			return this._description;
		}

		getCanTransmit() {
			return this._canTransmit;
		}

		getCanReceive() {
			return this._canReceive;
		}

		getCanConnect() {
			return this._canConnect;
		}

		getCanDisconnect() {
			return this._canDisconnect;
		}

		toString() {
			return `[ConnectionState (description: ${this._description})]`;
		}
	}

	ConnectionState.Connecting = new ConnectionState('connecting', false, false, false, true);
	ConnectionState.Connected = new ConnectionState('connected', true, true, false, true);
	ConnectionState.Disconnecting = new ConnectionState('disconnecting', false, false, false, false);
	ConnectionState.Disconnected = new ConnectionState('disconnected', false, false, true, false);

	return ConnectionState;
})();

