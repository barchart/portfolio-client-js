var MarketState = require('./../../../lib/market/MarketState');
var Profile = require('./../../../lib/market/Profile');

describe('When a MarketState instance is created', function() {
	'use strict';

	var marketState;

	beforeEach(function() {
		marketState = new MarketState();
	});

	describe('and a profile for symbol "A" is retrieved', function() {
		var profileA;

		beforeEach(function() {
			profileA = marketState.getProfile('A');
		});

		it('the profile for "A" should be a profile instance', function() {
			expect(profileA instanceof Profile).toEqual(true);
		});

		it('the profile for "A" should have the correct symbol', function() {
			expect(profileA.symbol).toEqual('A');
		});

		it('the profile for "A" should use the "America/New_York" timezone', function() {
			expect(profileA.timezoneName).toEqual('America/New_York');
		});

		describe('and the default timezone is set to "America/Chicago"', function() {
			var timezoneResult;

			beforeEach(function() {
				timezoneResult = marketState.setDefaultTimezoneName('America/Chicago');
			});

			it('should complete successfully', function() {
				expect(timezoneResult).toEqual(true);
			});

			it('the default timezone should be "America/Chicago"', function() {
				expect(marketState.getDefaultTimezoneName()).toEqual('America/Chicago');
			});

			it('the default timezone should be "America/Chicago"', function() {
				expect(marketState.getDefaultTimezoneName()).toEqual('America/Chicago');
			});

			it('the profile for "A" should now point to "America/Chicago" timezone', function() {
				expect(profileA.timezoneName).toEqual('America/Chicago');
			});

			describe('and a profile for symbol "BA" is retrieved', function() {
				var profileB;

				beforeEach(function () {
					profileA = marketState.getProfile('B');
				});

				it('the profile for "B" should use the "America/Chicago" timezone', function () {
					expect(profileA.timezoneName).toEqual('America/Chicago');
				});
			});
		});
	});

	it('the default timezone should be null', function() {
		expect(marketState.getDefaultTimezoneName()).toEqual(null);
	});
});