var dates = require('./../../../lib/utilities/dates');
var Quote = require('./../../../lib/market/Quote');

describe('when using the date formatter utilities', function() {
	'use strict';

	describe('to format a timestamp (representing June 28, 2017 at 4:54 PM, Chicago Time)', function() {
		var timestamp;

		beforeEach(function() {
			timestamp = 1498686889526;
		});

		describe('as a time', function() {
			describe('using Chicago time', function() {
				var formatted;

				beforeEach(function() {
					formatted = dates.formatTime(timestamp, 'America/Chicago');
				});

				it('should return 16:54 CT', function() {
					expect(formatted).toEqual('16:54 CT');
				});
			});

			describe('using New York time', function() {
				var formatted;

				beforeEach(function() {
					formatted = dates.formatTime(timestamp, 'America/New_York');
				});

				it('should return 17:54 ET', function() {
					expect(formatted).toEqual('17:54 ET');
				});
			});
		});

		describe('as a date', function() {
			describe('using Chicago time', function() {
				var formatted;

				beforeEach(function() {
					formatted = dates.formatDate(timestamp, 'America/Chicago');
				});

				it('should return 06/28/17', function() {
					expect(formatted).toEqual('06/28/17');
				});
			});

			describe('using New York time', function() {
				var formatted;

				beforeEach(function() {
					formatted = dates.formatDate(timestamp, 'America/New_York');
				});

				it('should return 06/28/17', function() {
					expect(formatted).toEqual('06/28/17');
				});
			});
		});
	});

	describe('to format a quote with a timestamp (representing June 28, 2017 at 4:54 PM, Chicago Time)', function() {
		var timestamp;

		beforeEach(function() {
			timestamp = 1498686889526;
		});

		describe('and the market is open', function() {
			describe('the the instrument has a price', function() {
				var quote;
				var formatted;

				beforeEach(function() {
					quote = new Quote('AAPL');
					quote.timeActual = timestamp;
					quote.lastPrice = 156.78;
				});

				describe('using Chicago time', function() {
					var formatted;

					beforeEach(function() {
						formatted = dates.formatQuoteTime(quote, 'America/Chicago');
					});

					it('should return 16:54 CT', function() {
						expect(formatted).toEqual('16:54 CT');
					});
				});

				describe('using New York time', function() {
					var formatted;

					beforeEach(function() {
						formatted = dates.formatQuoteTime(quote, 'America/New_York');
					});

					it('should return 17:54 ET', function() {
						expect(formatted).toEqual('17:54 ET');
					});
				});
			});

			describe('the the instrument has a no price', function() {
				var quote;
				var formatted;

				beforeEach(function() {
					quote = new Quote('AAPL');
					quote.timeActual = timestamp;
				});

				describe('using Chicago time', function() {
					var formatted;

					beforeEach(function() {
						formatted = dates.formatQuoteTime(quote, 'America/Chicago');
					});

					it('should return 06/28/17', function() {
						expect(formatted).toEqual('06/28/17');
					});
				});

				describe('using New York time', function() {
					var formatted;

					beforeEach(function() {
						formatted = dates.formatQuoteTime(quote, 'America/New_York');
					});

					it('should return 06/28/17', function() {
						expect(formatted).toEqual('06/28/17');
					});
				});
			});
		});

		describe('and the market is not open (because the flag has been set)', function() {
			var quote;
			var formatted;

			beforeEach(function() {
				quote = new Quote('AAPL');
				quote.timeActual = timestamp;
				quote.flag = 's';
			});

			describe('using Chicago time', function() {
				var formatted;

				beforeEach(function() {
					formatted = dates.formatQuoteTime(quote, 'America/Chicago');
				});

				it('should return 06/28/17', function() {
					expect(formatted).toEqual('06/28/17');
				});
			});

			describe('using New York time', function() {
				var formatted;

				beforeEach(function() {
					formatted = dates.formatQuoteTime(quote, 'America/New_York');
				});

				it('should return 06/28/17', function() {
					expect(formatted).toEqual('06/28/17');
				});
			});
		});
	});
});